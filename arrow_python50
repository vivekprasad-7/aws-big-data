1.

'''
Given an unsorted array A of size N
that contains only non-negative integers,
find a continuous sub-array which adds to a given number S.

Input:
N = 5, S = 12
A[] = {1,2,3,7,5}
'''
----------------------------------------------------------------------------------------
list_1 = [1,2,3,7,5]
val = 13
total_items = len(list_1)
for i in range(total_items):
    tem_store = 0
    for j in range(i,total_items):
        tem_store+=list_1[j]
        if(tem_store==val):
            print("start and end is {0},{1} ".format(list_1[i],list_1[j]))
            break
    else:
        continue
    break
----------------------------------------------------------------------------------------
2.

'''Given an array of size N-1 such that it only contains distinct integers
in the range of 1 to N. Find the missing element.

Input:
N = 5
A[] = {1,2,3,5}
Output: 4
'''
----------------------------------------------------------------------------------------
list1 = [3,4,5,7]
l_l = len(list1)
sum = list1[0]
for i in range(l_l):
    if(list1[i]!=sum):
        print(sum)
    sum+=1
----------------------------------------------------------------------------------------
3.

'''
Given two sorted arrays arr1[] and arr2[] of sizes n and m in non-decreasing order.
Merge them in sorted order without using any extra space.
Modify arr1 so that it contains the first N elements and modify arr2
so that it contains the last M elements.

Input:
n = 4, arr1[] = [1 3 5 7]
m = 5, arr2[] = [0 2 6 8 9]
Output:
arr1[] = [0 1 2 3]
arr2[] = [5 6 7 8 9]
Explanation:
After merging the two
non-decreasing arrays, we get,
0 1 2 3 5 6 7 8 9.
'''
----------------------------------------------------------------------------------------

arr1 = [1,3,5,7]
arr2 = [0,2,6,8,9]

n=4
m=5

for i in range(0,m):
    arr1.append(arr2[i])
    arr1.sort()
del arr2[0:m]
for i in range(n,len(arr1)):
    arr2.append(arr1[i])
print(arr1)
print(arr2)
----------------------------------------------------------------------------------------
4.

'''
Given two arrays X and Y of positive integers,
find the number of pairs such that xy > yx (raised to power of)
where x is an element from X and y is an element from Y.

Example 1:

Input:
M = 3, X[] = [2 1 6]
N = 2, Y[] = [1 5]
Output: 3
Explanation:
The pairs which follow xy > yx are
as such: 2 to the power 1 > 1 to the power 2,  2 to the power 5 > 5 to the power 2
and 6 to the power 1 > 1 to the power  6.

'''
----------------------------------------------------------------------------------------
x = [2,3,4,5]
y = [1,2,3]
count=0
for i in range(0,len(x)):
    for j in range(0,len(y)):
        if(pow(x[i],y[j])>pow(y[j],x[i])):
            print("val is {0} {1}".format(x[i],y[j]))
            count+=1

print(count)
----------------------------------------------------------------------------------------
5.
'''
Given an array A of positive integers.
Your task is to find the leaders in the array.
An element of array is leader if it is greater than
or equal to all the elements to its right side.
The rightmost element is always a leader

Input:
n = 6
A[] = {16,17,4,3,5,2}
Output: 17 5 2
'''
----------------------------------------------------------------------------------------
a = [16,17,4,3,5,2]


for i in range(0,len(a)):
    check = 0
    for j in range(i+1,len(a)):
        if(a[i]<a[j]):
            check=1

    if(check==0):
        print("leader is {0}".format(a[i]))

----------------------------------------------------------------------------------------
6.
'''
Given an array arr[] of positive integers of size N.
Reverse every sub-array group of size K.
Note: If at any instance, there are no more subarrays of size greater than or equal to K,
then reverse the last subarray (irrespective of its size).

Example 1:

Input:
N = 5, K = 3
arr[] = {1,2,3,4,5}
Output: 3 2 1 5 4
Explanation: First group consists of elements
1, 2, 3. Second group consists of 4,5.
'''
----------------------------------------------------------------------------------------

import math
arr = [1,2,3,4,5,6,7,8,9,10]
K = 4
N = 10
result_list = []

grp_count = math.ceil(len(arr)/K) #For Looping purpose
start_index = 0
end_index = K
for i in range(0, grp_count):
    temp_ls = []
    print("start_index is {0}".format(start_index))
    print("end_index is {0}".format(end_index))

    for j in range(start_index,end_index):
        temp_ls.append(arr[j])

    temp_ls.reverse()
    result_list.append(temp_ls)

    start_index = start_index+K
    end_index = end_index+K

    if(end_index>N):
        #set last index of the list
        end_index = N
print(result_list)
----------------------------------------------------------------------------------------

7.
'''
Given an array arr[] and an integer K where K is smaller than size of array,
the task is to find the Kth smallest element in the given array.
It is given that all array elements are distinct.

Example 1:

Input:
N = 6
arr[] = 7 10 4 3 20 15
K = 3
Output : 7
Explanation :
3rd smallest element in the given
array is 7.
'''
----------------------------------------------------------------------------------------

arr = [7,10,4,3,20,15]
K = 4
arr.sort()
print(arr)
print(arr[K-1])
----------------------------------------------------------------------------------------

